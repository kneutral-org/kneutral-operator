# Default values for kneutral-operator.

# Operator configuration
operator:
  # Number of operator replicas
  replicaCount: 1

  # Image configuration
  image:
    repository: kneutral/kneutral-operator
    pullPolicy: IfNotPresent
    tag: "latest"

  # Image pull secrets
  imagePullSecrets: []

  # Namespace to watch (empty for all namespaces)
  watchNamespace: ""

  # Leader election for high availability
  leaderElection:
    enabled: true

  # Log level
  logLevel: info

# API server configuration
api:
  enabled: true
  port: 8090
  # Service type for API server
  service:
    type: ClusterIP
    port: 8090
    annotations: {}

  # Ingress configuration
  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: api.kneutral.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: kneutral-operator-tls
    #    hosts:
    #      - api.kneutral.local

# ServiceAccount configuration
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# RBAC configuration
rbac:
  # Specifies whether RBAC resources should be created
  create: true

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

# Container security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Resources
resources:
  limits:
    cpu: 500m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 64Mi

# Autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Monitoring
monitoring:
  enabled: true
  serviceMonitor:
    enabled: false
    interval: 30s
    scrapeTimeout: 10s
    labels: {}

# Health probes
livenessProbe:
  httpGet:
    path: /healthz
    port: 8081
  initialDelaySeconds: 15
  periodSeconds: 20

readinessProbe:
  httpGet:
    path: /readyz
    port: 8081
  initialDelaySeconds: 5
  periodSeconds: 10

# Metrics configuration
metrics:
  port: 8080
  service:
    type: ClusterIP
    port: 8080
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8080"

# Health probe configuration
healthProbe:
  port: 8081

# OpenShift specific configurations for ROSA
openshift:
  # Enable OpenShift specific configurations
  enabled: true
  # Security Context Constraints
  scc:
    enabled: true
    # Use existing SCC or create custom one
    name: "restricted"
  # Route configuration (alternative to Ingress)
  route:
    enabled: false
    host: ""
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect