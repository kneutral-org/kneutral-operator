name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run tests
      run: go test -race ./...

    - name: Test standalone mode
      run: |
        go build -o bin/standalone ./cmd/standalone/
        ./bin/standalone --mock-data=true --api-bind-address=:8090 &
        SERVER_PID=$!
        sleep 3
        curl -f http://localhost:8090/health
        kill $SERVER_PID

  build-and-push:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/kneutral-org/kneutral-operator
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  release:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'v3.12.0'

    - name: Build binaries
      run: |
        # Build for multiple platforms
        GOOS=linux GOARCH=amd64 go build -o dist/kneutral-operator-linux-amd64 .
        GOOS=linux GOARCH=arm64 go build -o dist/kneutral-operator-linux-arm64 .
        GOOS=darwin GOARCH=amd64 go build -o dist/kneutral-operator-darwin-amd64 .
        GOOS=darwin GOARCH=arm64 go build -o dist/kneutral-operator-darwin-arm64 .
        GOOS=windows GOARCH=amd64 go build -o dist/kneutral-operator-windows-amd64.exe .

        # Build standalone versions
        GOOS=linux GOARCH=amd64 go build -o dist/kneutral-operator-standalone-linux-amd64 ./cmd/standalone
        GOOS=linux GOARCH=arm64 go build -o dist/kneutral-operator-standalone-linux-arm64 ./cmd/standalone
        GOOS=darwin GOARCH=amd64 go build -o dist/kneutral-operator-standalone-darwin-amd64 ./cmd/standalone
        GOOS=darwin GOARCH=arm64 go build -o dist/kneutral-operator-standalone-darwin-arm64 ./cmd/standalone
        GOOS=windows GOARCH=amd64 go build -o dist/kneutral-operator-standalone-windows-amd64.exe ./cmd/standalone

    - name: Package Helm chart
      run: |
        mkdir -p dist
        helm package helm/kneutral-operator -d dist/

    - name: Generate changelog
      run: |
        echo "## Changes in this Release" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Features" >> CHANGELOG.md
        echo "- Complete Kubernetes operator for AlertRule management" >> CHANGELOG.md
        echo "- REST API with full CRUD operations" >> CHANGELOG.md
        echo "- Automatic PrometheusRule generation" >> CHANGELOG.md
        echo "- Standalone testing mode (no Kubernetes required)" >> CHANGELOG.md
        echo "- Interactive Swagger UI documentation" >> CHANGELOG.md
        echo "- ROSA/OpenShift compatibility" >> CHANGELOG.md
        echo "- Helm chart for easy deployment" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Testing" >> CHANGELOG.md
        echo "- \`make standalone\`: Run without Kubernetes" >> CHANGELOG.md
        echo "- \`make test-standalone\`: Automated API testing" >> CHANGELOG.md
        echo "- \`make docs\`: Serve documentation locally" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Docker Images" >> CHANGELOG.md
        echo "- \`ghcr.io/kneutral-org/kneutral-operator:${GITHUB_REF#refs/tags/}\`" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Binaries" >> CHANGELOG.md
        echo "Available for Linux, macOS, and Windows (amd64 and arm64)" >> CHANGELOG.md

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/kneutral-operator-*
          dist/*.tgz
        body_path: CHANGELOG.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}